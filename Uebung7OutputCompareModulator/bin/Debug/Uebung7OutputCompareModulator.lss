
bin\Debug\Uebung7OutputCompareModulator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000011a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .fuse         00000003  00820000  00820000  0000018e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  00000191  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000038  00000000  00000000  000001b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000124  00000000  00000000  000001e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000b4  00000000  00000000  0000030d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000119  00000000  00000000  000003c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  000004dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000a6  00000000  00000000  000004fc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <main>:

#include <avr/io.h>
#include <avr/interrupt.h>

int main(void)
{
  c4:	df 93       	push	r29
  c6:	cf 93       	push	r28
  c8:	cd b7       	in	r28, 0x3d	; 61
  ca:	de b7       	in	r29, 0x3e	; 62

    DDRB = 0x80;
  cc:	e4 e2       	ldi	r30, 0x24	; 36
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	80 e8       	ldi	r24, 0x80	; 128
  d2:	80 83       	st	Z, r24

    // Timer 0 Setup
    TCCR0A = 0x42;
  d4:	e4 e4       	ldi	r30, 0x44	; 68
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	82 e4       	ldi	r24, 0x42	; 66
  da:	80 83       	st	Z, r24
    TCCR0B = 0x01;
  dc:	e5 e4       	ldi	r30, 0x45	; 69
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	80 83       	st	Z, r24
    OCR0A = 15;
  e4:	e7 e4       	ldi	r30, 0x47	; 71
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	8f e0       	ldi	r24, 0x0F	; 15
  ea:	80 83       	st	Z, r24

    //Timer 1 Setup
    TCCR1A = 0x04;
  ec:	e0 e8       	ldi	r30, 0x80	; 128
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	84 e0       	ldi	r24, 0x04	; 4
  f2:	80 83       	st	Z, r24
    TCCR1B = 0x1C;
  f4:	e1 e8       	ldi	r30, 0x81	; 129
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	8c e1       	ldi	r24, 0x1C	; 28
  fa:	80 83       	st	Z, r24
    ICR1 = 312; //Top wert
  fc:	e6 e8       	ldi	r30, 0x86	; 134
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	88 e3       	ldi	r24, 0x38	; 56
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	91 83       	std	Z+1, r25	; 0x01
 106:	80 83       	st	Z, r24
    OCR1C = 312; //Trigger Value for timing
 108:	ec e8       	ldi	r30, 0x8C	; 140
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	88 e3       	ldi	r24, 0x38	; 56
 10e:	91 e0       	ldi	r25, 0x01	; 1
 110:	91 83       	std	Z+1, r25	; 0x01
 112:	80 83       	st	Z, r24
 114:	ff cf       	rjmp	.-2      	; 0x114 <main+0x50>

00000116 <_exit>:
 116:	f8 94       	cli

00000118 <__stop_program>:
 118:	ff cf       	rjmp	.-2      	; 0x118 <__stop_program>
